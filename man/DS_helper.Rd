% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DS_helper.R
\name{DS_helper}
\alias{DS_helper}
\title{Query DataStream API}
\usage{
DS_helper(
  ep = c("metadata", "locations", "observations", "records"),
  select = NULL,
  filter = NULL,
  count = NULL,
  .max_filt = 10L,
  .top_list = c(10000L, 7500L, 5000L, 2500L, 1000L, 500L)
)
}
\arguments{
\item{ep}{one of "metadata","locations","observations", or "records". Corresponding to \link[datastreamr]{metadata}, \link[datastreamr]{locations}, \link[datastreamr]{observations}, and \link[datastreamr]{records}.}

\item{select}{a vector of fields to request from the API.}

\item{filter}{a named list of fields to filter by from the API. Each element in the list should be a list or vector in which the first element represents a R operator ('==','\%in\%','>=', etc.), and subsequent elements representing the criteria.}

\item{count}{a logical value indicating whether to return the number of observations rather than the data itself.}

\item{.max_filt}{an integer specifying the maximum number of filtered elements to include in each query.}

\item{.top_list}{a vector of integers applied to \verb{$top}. The first element is selected for each query, and if the payload is too large, the next biggest value is used.}
}
\value{
a data frame
}
\description{
Query DataStream API
}
\examples{
\dontrun{
library(datastreamr.helper)

loc <- DS_helper(
  ep="locations",
  filter=list(
    DOI=c("==","10.25976/ori9-w562"),
    CharacteristicName=c("\%in\%","Specific conductance","pH"),
    ActivityStartYear=c(">=",2010)
  )
)

rec <- DS_helper(
  ep="records",
  select=c("MonitoringLocationID",
           "ActivityStartDate",
           "ActivityStartTime",
           "CharacteristicName",
           "ResultUnit",
           "ResultValue",
           "ResultDetectionCondition",
           "ResultStatusID",
           "ResultComment"),
  filter=list(
    DOI=c("==","10.25976/ori9-w562"),
    CharacteristicName=c("\%in\%","Specific conductance","pH"),
    ActivityStartYear=c(">=",2010),
    ActivityStartYear=c("<=","2024"),
    LocationId=c("\%in\%", loc$Id) # Note 'Id' used here instead of 'ID'
  )
)

}
}
